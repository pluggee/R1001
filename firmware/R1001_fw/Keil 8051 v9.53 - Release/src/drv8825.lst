C51 COMPILER V9.53.0.0   DRV8825                                                           10/25/2016 21:14:30 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE DRV8825
OBJECT MODULE PLACED IN .\src/drv8825.OBJ
COMPILER INVOKED BY: Z:\Applications\SimplicityStudio_v3\developer\toolchains\keil_8051\9.53\BIN\C51.exe /Users/sherifei
                    -d/plugge_git/R1001/firmware/R1001_fw/src/drv8825.c OMF2 SMALL DEBUG OBJECTEXTEND ROM(LARGE) WARNINGLEVEL(2) FLOATFUZZY(3
                    -) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Users/sherifeid/plugge_git/R1001/firmware/R100
                    -1_fw/inc;/Applications/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/shared/si8051Base;/Applications/SimplicitySt
                    -udio_v3/developer/sdks/si8051/v3//Device/EFM8BB1;/Applications/SimplicityStudio_v3/developer/sdks/si8051/v3//Device/EFM8
                    -BB1/inc) REGFILE(R1001_fw.ORC) PRINT(.\src/drv8825.lst) COND PAGEWIDTH(120) PAGELENGTH(65) OBJECT(.\src/drv8825.OBJ)

line level    source

   1          /*
   2           * drv8825.c
   3           *
   4           *  Created on: Sep 8, 2016
   5           *      Author: sherifeid
   6           */
   7          
   8          #include "drv8825.h"
   9          #include <SI_EFM8BB1_Register_Enums.h>                  // SFR declarations
  10          #include "compiler_defs.h"
  11          #include <intrins.h>
  12          #include "global.h"
  13          
  14          // This source includes all control functions for DRV8825 chip
  15          
  16          // Global variables
  17          unsigned char IDRVH;
  18          unsigned char IDRVL;
  19          char MCTL;
  20          char MSTAT;
  21          char StepRes;
  22          
  23          //-----------------------------------------------------------------------------
  24          // DRV8825 Pin Declarations
  25          //-----------------------------------------------------------------------------
  26          // Output pins
  27          SBIT(DRESETB, SFR_P0, 5);                                               // Driver reset pin
  28          SBIT(DSLEEPB, SFR_P0, 6);                                               // Driver sleep pin
  29          SBIT(DECAY, SFR_P1, 0);                                                         // Driver decay pin
  30          SBIT(MODE0, SFR_P1, 1);                                                         // Driver mode0 pin
  31          SBIT(MODE1, SFR_P1, 2);                                                         // Driver mode1 pin
  32          SBIT(MODE2, SFR_P1, 3);                                                         // Driver mode2 pin
  33          
  34          // Input pins
  35          SBIT(FAULTB, SFR_P0, 7);
  36          SBIT(HOMEB, SFR_P1, 4);
  37          
  38          void SetDecayFast (char val)
  39          {
  40   1              // This function sets the decay mode
  41   1          // @param val: if true then decay is set fast, otherwise slow
  42   1              if (val){
  43   2                  DECAY = 1;                                      // set to fast decay
  44   2              }
  45   1              else{
  46   2                  DECAY = 0;                                      // set to slow decay
  47   2              }
  48   1      }
  49          
  50          void ResetDriver (void)
  51          {
C51 COMPILER V9.53.0.0   DRV8825                                                           10/25/2016 21:14:30 PAGE 2   

  52   1              unsigned int i;             // for loop variable
  53   1              // Reset pulse for the motor driver
  54   1              DRESETB = 0;                    // set resetb to 0, get driver into reset
  55   1              for (i=0; i<10000; i++)
  56   1              {
  57   2                      _nop_ ();                       // assembly NOP
  58   2              }
  59   1              DRESETB = 1;                    // set resetb to 1, get driver out of reset
  60   1      //      DSLEEPB = 1;                    // get driver out of sleep mode
  61   1      }
  62          
  63          void SetSteppingMode (void)
  64          {
  65   1              // this function assigns stepping modes
  66   1              // steps        : stepping resolution in power of 2, stepping = 2^steps
  67   1              // example, if steps = 4, stepping to 1/16
  68   1              // if the input value of 'steps' in invalid (no 1,2,4,8,16,32) then it defaults to 1/32
  69   1              switch(StepRes) {
  70   2              case 0:
  71   2                      MODE0 = 0;
  72   2                      MODE1 = 0;
  73   2                      MODE2 = 0;
  74   2                      break;
  75   2              case 1:
  76   2                      MODE0 = 1;
  77   2                      MODE1 = 0;
  78   2                      MODE2 = 0;
  79   2                      break;
  80   2              case 2:
  81   2                      MODE0 = 0;
  82   2                      MODE1 = 1;
  83   2                      MODE2 = 0;
  84   2                      break;
  85   2              case 3:
  86   2                      MODE0 = 1;
  87   2                      MODE1 = 1;
  88   2                      MODE2 = 0;
  89   2                      break;
  90   2              case 4:
  91   2                      MODE0 = 0;
  92   2                      MODE1 = 0;
  93   2                      MODE2 = 1;
  94   2                      break;
  95   2              default :
  96   2                      // defaults to 1/32
  97   2                      MODE0 = 1;
  98   2                      MODE1 = 0;
  99   2                      MODE2 = 1;
 100   2              }
 101   1      }
 102          
 103          void SetDriveCurrent (void)
 104          {
 105   1          // This function sets the drive current based on that values in IL and IH
 106   1          unsigned long drivecurrent;
 107   1          drivecurrent = (unsigned long)IDRVH * 256 + (unsigned long)IDRVL;
 108   1          if (drivecurrent > 2000){
 109   2              // limit drive current to 2A (2000mA)
 110   2              drivecurrent = 2000;
 111   2              IDRVH = 0x07;               // also update internal IDRVH register
 112   2              IDRVL = 0xD0;               // also update internal IDRVL register
 113   2          }
 114   1          // current = 2A when vout = 2.5V
C51 COMPILER V9.53.0.0   DRV8825                                                           10/25/2016 21:14:30 PAGE 3   

 115   1          // VDD = 3.3V, so max pwm value is 194
 116   1      
 117   1      //    PCA0CPH0 = (char)((198*drivecurrent) >> 11);                   // set PWMVREF value, ideal 3.3V calc
             -ulated value
 118   1          PCA0CPH0 = (char)((202*drivecurrent) >> 11);                   // set PWMVREF value, compensated after
             - measurement
 119   1      }
 120          
 121          void RefreshMCTL (void)
 122          {
 123   1          // This function read the value of MCTL, executes the value and refreshes it
 124   1          // first we check for a reset condition
 125   1          if ((MCTL & 0x80) != 0){
 126   2              // reset condition initiates here
 127   2              ResetDriver();
 128   2              // set reset flag to zero in MCTL
 129   2              MCTL &= 0x7F;
 130   2          }
 131   1      
 132   1          // set sleep pin
 133   1          if ((MCTL & 0x04) == 0){
 134   2              // set sleep# pin to 1
 135   2              DSLEEPB = 1;
 136   2          }
 137   1          else{
 138   2              // set sleep# pin to 0
 139   2              DSLEEPB = 0;
 140   2          }
 141   1      
 142   1          // look at decay pins
 143   1          if ((MCTL & 0x02) == 1){
 144   2              // mixed decay bit is set
 145   2              // set decay pin P1.0 to open-drain, keep other values to reset state
 146   2              P1MDOUT = P1MDOUT_B0__OPEN_DRAIN | P1MDOUT_B1__PUSH_PULL
 147   2                      | P1MDOUT_B2__PUSH_PULL | P1MDOUT_B3__PUSH_PULL
 148   2                      | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 149   2                      | P1MDOUT_B6__OPEN_DRAIN;
 150   2      
 151   2              // set P1.0 pin to high, make sure it's not driving low
 152   2              DECAY = 0;
 153   2          }
 154   1          else{
 155   2      
 156   2              // P1.0 to push-pull, keep other values to reset state
 157   2              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__PUSH_PULL
 158   2                      | P1MDOUT_B2__PUSH_PULL | P1MDOUT_B3__PUSH_PULL
 159   2                      | P1MDOUT_B4__OPEN_DRAIN | P1MDOUT_B5__OPEN_DRAIN
 160   2                      | P1MDOUT_B6__OPEN_DRAIN;
 161   2      
 162   2              if ((MCTL & 0x01 == 1)){
 163   3                  // set decay to fast
 164   3                  SetDecayFast(1);
 165   3              }
 166   2              else{
 167   3                  // set decay to slow
 168   3                  SetDecayFast(0);
 169   3              }
 170   2          }
 171   1      
 172   1          // mask MCTL and set bits 6:3 to 0
 173   1          MCTL &= 87;
 174   1      
 175   1      }
C51 COMPILER V9.53.0.0   DRV8825                                                           10/25/2016 21:14:30 PAGE 4   

 176          
 177          void RefreshMSTAT (void)
 178          {
 179   1          // this function refreshes MSTAT register
 180   1          MSTAT = 0;                                          // initial value of 0x00
 181   1      
 182   1          if (FAULTB == 0){
 183   2              MSTAT |= 0x01;                                  // set fault bit
 184   2          }
 185   1      
 186   1          if (HOMEB == 0){
 187   2              MSTAT |= 0x02;                                  // set home bit
 188   2          }
 189   1      }
 190          
 191          void drv8825_init(void)
 192          {
 193   1          // this function loads the default values and initializes the driver
 194   1      
 195   1          // initialize MCTL
 196   1          MCTL = 0x81;                    // default value, reset driver and fast decay
 197   1          RefreshMCTL();
 198   1      
 199   1          // set stepping resolution
 200   1          StepRes = StepRes_default;
 201   1          SetSteppingMode();
 202   1      
 203   1          // initialize drive current
 204   1          IDRVH = IDRVH_default;
 205   1          IDRVL = IDRVL_default;
 206   1          SetDriveCurrent();
 207   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    276    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
